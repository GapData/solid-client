{"version":3,"sources":["node_modules/browser-pack/_prelude.js","package.json","index.js","lib/meta.js","lib/auth.js","lib/status.js","lib/web.js","lib/identity.js","node_modules/xhr2/lib/browser.js"],"names":["Solid","auth","require","identity","meta","status","web","tabulator","solid","module","exports","lib","version","XMLHttpRequest","authEndpoint","signupEndpoint","listen","promise","Promise","resolve","reject","eventMethod","window","addEventListener","eventListener","messageEvent","e","u","data","slice","user","length","login","url","location","origin","pathname","http","open","withCredentials","onreadystatechange","this","readyState","DONE","getResponseHeader","xhr","send","signup","leftPosition","topPosition","width","height","screen","encodeURIComponent","then","webid","err","isOnline","navigator","onLine","onOffline","callback","onOnline","parseResponseMeta","resp","h","parseLinkHeader","responseURL","acl","websocket","editable","patch","indexOf","push","allow","exists","PROXY","TIMEOUT","$rdf","Fetcher","crossSiteProxyTemplate","LDP","Namespace","link","linkexp","paramexp","matches","match","rels","i","split","href","substring","ps","s","j","p","paramsplit","rel","replace","SolidWebClient","head","get","g","graph","f","docURI","nowOrWhenFetched","undefined","ok","body","post","slug","isContainer","mime","resType","uri","setRequestHeader","put","onerror","Error","toDel","toIns","del","create","update","solidClient","RDFS","OWL","PIM","FOAF","DCT","appendGraph","toGraph","fromGraph","source","sym","statementsMatching","forEach","st","add","subject","predicate","object","why","getProfile","any","toLoad","concat","total","syncAll","prof","getWorkspaces","workspaces","ws","w","workspace","title","value","statements","getWritableProfiles","profiles","list"],"mappings":"AAAA;AImCA,YACA,IAAIa,gBAAiBX,QAAQ,QAGzBY,aAAe,sBACfC,eAAiB,sCAQjBC,OAAS,WACX,GAAIC,GAAU,GAAIC,SAAQ,SAAUC,EAASC,GAC3C,GAAIC,GAAcC,OAAOC,iBACrB,mBACA,cACAC,EAAgBF,OAAOD,GACvBI,EAA+B,gBAAhBJ,EACf,YACA,SACJG,GAAcC,EAAc,SAAUC,GACpC,GAAIC,GAAID,EAAEE,IACV,IAAsB,UAAlBD,EAAEE,MAAM,EAAG,GAAgB,CAC7B,GAAIC,GAAOH,EAAEE,MAAM,EAAGF,EAAEI,OACxB,OAAID,IAAQA,EAAKC,OAAS,GAA0B,SAArBD,EAAKD,MAAM,EAAG,GACpCV,EAAQW,GAERV,EAAOU,MAGjB,IAGL,OAAOb,IAaLe,MAAQ,SAAgBC,GAC1BA,EAAMA,GAAOX,OAAOY,SAASC,OAASb,OAAOY,SAASE,QACtD,IAAInB,GAAU,GAAIC,SAAQ,SAAUC,EAASC,GAC3C,GAAIiB,GAAO,GAAIxB,eACfwB,GAAKC,KAAK,OAAQL,GAClBI,EAAKE,iBAAkB,EACvBF,EAAKG,mBAAqB,WACxB,GAAIC,KAAKC,aAAeD,KAAKE,KAAM,CACjC,GAAoB,MAAhBF,KAAKpC,OAAgB,CACvB,GAAIyB,GAAOW,KAAKG,kBAAkB,OAClC,IAAId,GAAQA,EAAKC,OAAS,GAA0B,SAArBD,EAAKD,MAAM,EAAG,GAC3C,MAAOV,GAAQW,GAInB,GAAIO,GAAO,GAAIxB,eACfwB,GAAKC,KAAK,OAAQxB,cAClBuB,EAAKE,iBAAkB,EACvBF,EAAKG,mBAAqB,WACxB,GAAIC,KAAKC,aAAeD,KAAKE,KAAM,CACjC,GAAoB,MAAhBF,KAAKpC,OAAgB,CACvB,GAAIyB,GAAOW,KAAKG,kBAAkB,OAClC,IAAId,GAAQA,EAAKC,OAAS,GAA0B,SAArBD,EAAKD,MAAM,EAAG,GAC3C,MAAOV,GAAQW,GAGnB,MAAOV,IAAQf,OAAQoC,KAAKpC,OAAQwC,IAAKJ,SAG7CJ,EAAKS,SAGTT,EAAKS,QAGP,OAAO7B,IAWL8B,OAAS,SAAiBd,GAC5BA,EAAMA,GAAOlB,cACb,IAAIiC,GAAcC,EACdC,EAAQ,KACRC,EAAS,GAEbH,GAAgB1B,OAAO8B,OAAOF,MAAQ,GAAOA,EAAQ,EAAK,IAE1DD,EAAe3B,OAAO8B,OAAOD,OAAS,GAAOA,EAAS,EAAK,IAC3D7B,OAAOgB,KAAKL,EAAM,WAAaoB,mBAAmB/B,OAAOY,SAASC,QACjE,eAAgB,qCAAuCe,EAAQ,WAC/DC,EAAS,SAAWH,EAAe,QAAUC,EAE9C,IAAIhC,GAAU,GAAIC,SAAQ,SAAUC,EAASC,GAC3CJ,SAASsC,KAAK,SAAUC,GACtB,MAAOpC,GAAQoC,KADjBvC,SAES,SAAUwC,GACjB,MAAOpC,GAAOoC,MAIlB,OAAOvC,GAGTR,QAAOC,QAAQM,OAASA,OACxBP,OAAOC,QAAQsB,MAAQA,MACvBvB,OAAOC,QAAQqC,OAASA;;AG3JxB,YAMA,IAAI+E,aAAc5H,QAAQ,SAItB6H,KAAOjD,KAAKI,UAAU,yCACtB8C,IAAMlD,KAAKI,UAAU,kCACrB+C,IAAMnD,KAAKI,UAAU,mCACrBgD,KAAOpD,KAAKI,UAAU,8BACtBiD,IAAMrD,KAAKI,UAAU,6BASrBkD,YAAc,SAAsBC,EAASC,EAAW5B,GAC1D,GAAI6B,GAAS,EAAWzD,KAAK0D,IAAI9B,GAAUE,MAC3C0B,GAAUG,mBAAmB7B,OAAWA,OAAWA,OAAW2B,GAC3DG,QAAQ,SAAUC,GACjBN,EAAQO,IAAID,EAAGE,QAASF,EAAGG,UAAWH,EAAGI,OAAQJ,EAAGK,QAYtDC,WAAa,SAAqBhH,GACpC,GAAIhB,GAAU,GAAIC,SAAQ,SAAUC,EAASC,GAE3C0G,YAAYxB,IAAIrE,GAAKqB,KACnB,SAAUkD,GAERvE,EAAOA,EAAIuC,QAAQ,MAAQ,EAAKvC,EAAIJ,MAAM,EAAGI,EAAIuC,QAAQ,MAAQvC,CACjE,IAAIsB,GAAQiD,EAAM0C,IAAIpE,KAAK0D,IAAIvG,GAAMiG,KAAK,iBAEtCiB,IACJA,GAASA,EAAOC,OAAO5C,EAAMiC,mBAAmBlF,EAC9CyE,IAAI,UAAWpB,OAAW9B,KAAK0D,IAAIvG,KACrCkH,EAASA,EAAOC,OAAO5C,EAAMiC,mBAAmBlF,EAC9CwE,KAAK,WAAYnB,OAAW9B,KAAK0D,IAAIvG,KACvCkH,EAASA,EAAOC,OAAO5C,EAAMiC,mBAAmBlF,EAC9C0E,IAAI,mBAAoBrB,OAAW9B,KAAK0D,IAAIvG,IAC9C,IAAIoH,GAAQF,EAAOpH,OAGfuH,EAAU,WACZ,MAAc,KAAVD,EACKlI,EAAQqF,GADjB,OAIF,OAAc,KAAV6C,EACKlI,EAAQqF,OAGjB2C,GAAOT,QAAQ,SAAUa,GACvBzB,YAAYxB,IAAIiD,EAAKR,OAAO3B,KAAK9D,KAC/B,SAAUiD,GACR6B,YAAY5B,EAAOD,EAAGgD,EAAKR,OAAO3B,KAClCiC,IACAC,MAJJxB,SAOE,SAAUtE,GACR,GAAIA,EAAK,KAAMA,EACf6F,KACAC,UApCVxB,SA0CE,SAAUtE,GACRpC,EAAOoC,MAKb,OAAOvC,IAYLuI,cAAgB,QAASA,GAAejG,EAAOiD,GACjD,GAAIvF,GAAU,GAAIC,SAAQ,SAAUC,EAASC,GAC3C,GAAKoF,EAWE,CAEL,GAAIiD,MACAC,EAAKlD,EAAMiC,mBAAmB3D,KAAK0D,IAAIjF,GAAQ0E,IAAI,aACrDrB,OACF,OAAkB,KAAd8C,EAAG3H,OACEZ,EAAQsI,IAEjBC,EAAGhB,QAAQ,SAAUiB,GAEnB,GAAIC,MACAC,EAAQrD,EAAM0C,IAAIS,EAAEZ,OAAQZ,IAAI,SAChC0B,IAASA,EAAMC,QACjBF,EAAUC,MAAQA,EAAMC,OAE1BF,EAAU3H,IAAM0H,EAAEZ,OAAO3B,IACzBwC,EAAUG,WAAavD,EAAMiC,mBAAmBkB,EAAEZ,OAAQnC,OACxDA,QACF6C,EAAWhF,KAAKmF,KAEXzI,EAAQsI,IA7BfR,WAAW1F,GAAOD,KAAK,SAAUiD,GAC/BiD,EAAcjG,EAAOgD,GAAGjD,KAAK,SAAUoG,GACrC,MAAOvI,GAAQuI,KADjBF,SAES,SAAUhG,GACjB,MAAOpC,GAAOoC,OAJlByF,SAMS,SAAUzF,GACjB,MAAOpC,GAAOoC,MA0BpB,OAAOvC,IAWL+I,oBAAsB,QAASA,GAAqBzG,EAAOiD,GAC7D,GAAIvF,GAAU,GAAIC,SAAQ,SAAUC,EAASC,GAC3C,GAAKoF,EAWE,CAEL,GAAIyD,KAEJ1G,GAASA,EAAMiB,QAAQ,MAAQ,EAC3BjB,EAAM1B,MAAM,EAAG0B,EAAMiB,QAAQ,MAC7BjB,CACJ,IAAIzB,GAAO0E,EAAM0C,IAAIpE,KAAK0D,IAAIjF,GAAQ2E,KAAK,iBAEvCiB,IACJA,GAASA,EAAOC,OAAO5C,EAAMiC,mBAAmB3G,EAC9CkG,IAAI,UAAWpB,OAAW9B,KAAK0D,IAAIjF,KACrC4F,EAASA,EAAOC,OAAO5C,EAAMiC,mBAAmB3G,EAC9CiG,KAAK,WAAYnB,OAAW9B,KAAK0D,IAAIjF,KACvC4F,EAASA,EAAOC,OAAO5C,EAAMiC,mBAAmB3G,EAC9CmG,IAAI,mBAAoBrB,OAAW9B,KAAK0D,IAAIjF,KAE9C4F,EAASA,EAAOC,QAAQL,QAAS3B,IAAK7D,IACtC,IAAI8F,GAAQF,EAAOpH,OAGfuH,EAAU,WACZ,MAAc,KAAVD,EACKlI,EAAQ8I,GADjB,OAIF,IAAc,IAAVZ,EACF,MAAOlI,GAAQ8I,EAIjBd,GAAOT,QAAQ,SAAUa,GACvB,GAAItH,GAAMsH,EAAKR,OAAO3B,GACtBU,aAAYzB,KAAKpE,GAAKqB,KACpB,SAAUlD,GACJA,EAAKkE,SAASvC,OAAS,GAAKkI,EAASzF,QAAQvC,GAAO,GACtDgI,EAASxF,MAAMxC,IAAKA,EAAKqC,SAAUlE,EAAKkE,WAE1C+E,IACAC,MANJxB,SASE,SAAUtE,GACR,GAAIA,EAAK,KAAMA,EACf6F,KACAC,YAtDNL,YAAW1F,GAAOD,KAAK,SAAUiD,GAC/ByD,EAAoBzG,EAAOgD,GAAGjD,KAAK,SAAU4G,GAC3C,MAAO/I,GAAQ+I,KADjBF,SAES,SAAUxG,GACjB,MAAOpC,GAAOoC,OAJlByF,SAMS,SAAUzF,GACjB,MAAOpC,GAAOoC,MAqDpB,OAAOvC,GAGTR,QAAOC,QAAQuI,WAAaA,WAC5BxI,OAAOC,QAAQ8I,cAAgBA,cAC/B/I,OAAOC,QAAQsJ,oBAAsBA;;AJ3NrC,YAMA,IAAIrJ,KAAMT,QAAQ,aAMlBO,QAAOC,QAAQE,QAAU,WACvB,MAAOD,KAAIC;;AEbb,YAYA,IAAI6C,UAAW,WACb,MAAOnC,QAAOoC,UAAUC,QAStBC,UAAY,SAAoBC,GAClCvC,OAAOC,iBAAiB,UAAWsC,GAAU,IAS3CC,SAAW,SAAmBD,GAChCvC,OAAOC,iBAAiB,SAAUsC,GAAU,GAG9CpD,QAAOC,QAAQ+C,SAAWA,SAC1BhD,OAAOC,QAAQkD,UAAYA,UAC3BnD,OAAOC,QAAQoD,SAAWA;;ACtC1B,YAiDA,SAASC,mBAAmBC,GAC1B,GAAIC,GAAIC,gBAAgBF,EAAKpB,kBAAkB,SAC3CxC,IACJA,GAAK6B,IAAO+B,EAAKpB,kBAAkB,YAC/BoB,EAAKpB,kBAAkB,YACvBoB,EAAKG,YACT/D,EAAKgE,IAAMH,EAAO,IAClB7D,EAAKA,KAAQ6D,EAAS,KAAIA,EAAQ,KAAIA,EAAe,YACrD7D,EAAK0B,KAAQkC,EAAKpB,kBAAkB,QAChCoB,EAAKpB,kBAAkB,QACvB,GACJxC,EAAKiE,UAAaL,EAAKpB,kBAAkB,eACrCoB,EAAKpB,kBAAkB,eACvB,GAEJxC,EAAKkE,WACL,IAAIC,GAAQP,EAAKpB,kBAAkB,eAC/B2B,IAASA,EAAMC,QAAQ,8BAAgC,GACzDpE,EAAKkE,SAASG,KAAK,QAErB,IAAIC,GAAQV,EAAKpB,kBAAkB,QAenC,OAdI8B,KACEA,EAAMF,QAAQ,QAAU,GAC1BpE,EAAKkE,SAASG,KAAK,OAEjBC,EAAMF,QAAQ,SAAW,GAC3BpE,EAAKkE,SAASG,KAAK,QAEjBC,EAAMF,QAAQ,WAAa,GAC7BpE,EAAKkE,SAASG,KAAK,WAIvBrE,EAAKuE,OAA0B,MAAhBX,EAAK3D,OACpBD,EAAKyC,IAAMmB,EACJ5D,EA9ET,GAAIS,gBAAiBX,QAAQ,QAEzB0E,MAAQ,sCACRC,QAAU,GAEdC,MAAKC,QAAQC,uBAAyBJ,KAEtC,IAAIK,KAAMH,KAAKI,UAAU,6BAQrBhB,gBAAkB,SAA0BiB,GAM9C,IAAK,GALDC,GAAU,sGACVC,EAAW,6EAEXC,EAAUH,EAAKI,MAAMH,GACrBI,KACKC,EAAI,EAAGA,EAAIH,EAAQvD,OAAQ0D,IAKlC,IAAK,GAJDC,GAAQJ,EAAQG,GAAGC,MAAM,KACzBC,EAAOD,EAAM,GAAGE,UAAU,GAC1BC,EAAKH,EAAM,GACXI,EAAID,EAAGN,MAAMF,GACRU,EAAI,EAAGA,EAAID,EAAE/D,OAAQgE,IAAK,CACjC,GAAIC,GAAIF,EAAEC,GACNE,EAAaD,EAAEN,MAAM,KAErBQ,EAAMD,EAAW,GAAGE,QAAQ,QAAS,GACzCX,GAAKU,GAAOP,EAGhB,MAAOH,IAoDLY,gBAQFC,KAAM,SAAepE,GACnB,GAAIhB,GAAU,GAAIC,SAAQ,SAAUC,GAClC,GAAIkB,GAAO,GAAIxB,eACfwB,GAAKC,KAAK,OAAQL,GAClBI,EAAKE,iBAAkB,EACvBF,EAAKG,mBAAqB,WACpBC,KAAKC,aAAeD,KAAKE,MAC3BxB,EAAQ4C,kBAAkBtB,QAG9BJ,EAAKS,QAGP,OAAO7B,IASTqF,IAAK,SAAcrE,GACjB,GAAIhB,GAAU,GAAIC,SAAQ,SAAUC,EAASC,GAC3C,GAAImF,GAAIzB,KAAK0B,QACTC,EAAI,GAAI3B,MAAKC,QAAQwB,EAAG1B,SAExB6B,EAAUzE,EAAIuC,QAAQ,MAAQ,EAC9BvC,EAAIJ,MAAM,EAAGI,EAAIuC,QAAQ,MACzBvC,CACJwE,GAAEE,iBAAiBD,EAAQE,OAAW,SAAUC,EAAIC,EAAMjE,GACnDgE,EAGH1F,EAAQoF,GAFRnF,GAAQf,OAAQwC,EAAIxC,OAAQwC,IAAKA,OAOvC,OAAO5B,IAgBT8F,KAAM,SAAe9E,EAAKL,EAAMoF,EAAMC,EAAaC,GACjD,GAAIC,GAAUlC,IAAI,YAAYmC,GAC1BH,KACFE,EAAUlC,IAAI,kBAAkBmC,IAChCF,EAAO,eAETA,EAAOA,GAAQ,aACf,IAAIjG,GAAU,GAAIC,SAAQ,SAAUC,EAASC,GAC3C,GAAIiB,GAAO,GAAIxB,eACfwB,GAAKC,KAAK,OAAQL,GAClBI,EAAKgF,iBAAiB,eAAgBH,GACtC7E,EAAKgF,iBAAiB,OAAQ,IAAMF,EAAU,iBAC1CH,GAAQA,EAAKjF,OAAS,GACxBM,EAAKgF,iBAAiB,OAAQL,GAEhC3E,EAAKE,iBAAkB,EACvBF,EAAKG,mBAAqB,WACxB,GAAIC,KAAKC,aAAeD,KAAKE,KAAM,CACjC,GAAoB,MAAhBF,KAAKpC,QAAkC,MAAhBoC,KAAKpC,OAC9B,MAAOc,GAAQ4C,kBAAkBtB,MAEjCrB,IAAQf,OAAQoC,KAAKpC,OAAQwC,IAAKJ,SAIpCb,GAAQA,EAAKG,OAAS,EACxBM,EAAKS,KAAKlB,GAEVS,EAAKS,QAIT,OAAO7B,IAcTqG,IAAK,SAAcrF,EAAKL,EAAMsF,GAC5B,GAAIjG,GAAU,GAAIC,SAAQ,SAAUC,EAASC,GAC3C8F,EAAOA,GAAQ,aACf,IAAI7E,GAAO,GAAIxB,eACfwB,GAAKC,KAAK,MAAOL,GACjBI,EAAKgF,iBAAiB,eAAgBH,GACtC7E,EAAKE,iBAAkB,EACvBF,EAAKG,mBAAqB,WACxB,GAAIC,KAAKC,aAAeD,KAAKE,KAAM,CACjC,GAAoB,MAAhBF,KAAKpC,QAAkC,MAAhBoC,KAAKpC,OAC9B,MAAOc,GAAQ4C,kBAAkBtB,MAEjCrB,IAAQf,OAAQoC,KAAKpC,OAAQwC,IAAKJ,SAKxCJ,EAAKkF,QAAU,WACbnG,EAAOoG,MAAM,mBAEX5F,EACFS,EAAKS,KAAKlB,GAEVS,EAAKS,QAIT,OAAO7B,IAgBTsD,MAAO,SAAgBtC,EAAKwF,EAAOC,GACjC,GAAIzG,GAAU,GAAIC,SAAQ,SAAUC,EAASC,GAC3C,GACIqE,GADA7D,EAAO,EAGX,IAAI6F,GAASA,EAAM1F,OAAS,EAC1B,IAAK0D,EAAI,EAAGA,EAAIgC,EAAM1F,OAAQ0D,IACxBA,EAAI,IACN7D,GAAQ,QAEVA,GAAQ,iBAAmB6F,EAAMhC,GAAK,IAG1C,IAAIiC,GAASA,EAAM3F,OAAS,EAC1B,IAAK0D,EAAI,EAAGA,EAAIiC,EAAM3F,OAAQ0D,KACxBA,EAAI,GAAMgC,GAASA,EAAM1F,OAAS,KACpCH,GAAQ,QAEVA,GAAQ,iBAAmB8F,EAAMjC,GAAK,IAI1C,IAAIpD,GAAO,GAAIxB,eACfwB,GAAKC,KAAK,QAASL,GACnBI,EAAKgF,iBAAiB,eAAgB,6BACtChF,EAAKE,iBAAkB,EACvBF,EAAKG,mBAAqB,WACxB,GAAIC,KAAKC,aAAeD,KAAKE,KAAM,CACjC,GAAoB,MAAhBF,KAAKpC,QAAkC,MAAhBoC,KAAKpC,OAC9B,MAAOc,GAAQ4C,kBAAkBtB,MAEjCrB,IAAQf,OAAQoC,KAAKpC,OAAQwC,IAAKJ,SAIpCb,GAAQA,EAAKG,OAAS,EACxBM,EAAKS,KAAKlB,GAEVS,EAAKS,QAIT,OAAO7B,IAUT0G,IAAK,SAAc1F,GACjB,GAAIhB,GAAU,GAAIC,SAAQ,SAAUC,EAASC,GAC3C,GAAIiB,GAAO,GAAIxB,eACfwB,GAAKC,KAAK,SAAUL,GACpBI,EAAKE,iBAAkB,EACvBF,EAAKG,mBAAqB,WACxB,GAAIC,KAAKC,aAAeD,KAAKE,KAAM,CACjC,GAAoB,MAAhBF,KAAKpC,QAAkC,MAAhBoC,KAAKpC,OAC9B,MAAOc,IAAQ,EAEfC,IAAQf,OAAQoC,KAAKpC,OAAQwC,IAAKJ,SAIxCJ,EAAKS,QAGP,OAAO7B,IAKXmF,gBAAewB,OAASxB,eAAeW,KACvCX,eAAeD,QAAUC,eAAekB,IACxClB,eAAeyB,OAASzB,eAAe7B,MACvC6B,eAAelC,gBAAkBA,gBAEjCzD,OAAOC,QAAU0F;;AEnUjB3F,OAAOC,QAAUG;;APAjB;;ACAA,YAWA,IAAIb,QACFC,KAAMC,QAAQ,cACdC,SAAUD,QAAQ,kBAClBE,KAAMF,QAAQ,cACdG,OAAQH,QAAQ,gBAChBI,IAAKJ,QAAQ,aAGU,oBAAdK,aACTA,UAAUC,MAAQR,OAGpBS,OAAOC,QAAUV","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports={\"name\":\"solid.js\",\"version\":\"0.5.1\",\"description\":\"Common library for writing Solid applications\",\"main\":\"dist/solid.js\",\"scripts\":{\"build-browserified\":\"browserify -r ./index.js:solid.js > dist/solid.js\",\"build-minified\":\"browserify -r ./index.js:solid.js -d -p [minifyify --map dist/solid.js.map.json --output dist/solid.js.map.json] > dist/solid.min.js\",\"build\":\"npm run build-browserified && npm run build-minified\",\"standard\":\"standard lib/*\",\"tape\":\"tape test/**/*.js\",\"test\":\"npm run standard && npm run build-browserified && open test/index.html\"},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/solid/solid.js\"},\"keywords\":[\"solid\",\"decentralized\",\"web\",\"rdf\",\"ldp\",\"linked\",\"data\"],\"author\":\"Andrei Sambra <andrei@fcns.eu>\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/solid/solid.js/issues\"},\"homepage\":\"https://github.com/solid/solid.js\",\"dependencies\":{\"xhr2\":\"^0.1.3\"},\"devDependencies\":{\"browserify\":\"^13.0.0\",\"minifyify\":\"^7.2.1\",\"standard\":\"^5.4.1\"},\"standard\":{\"globals\":[\"$rdf\",\"tabulator\",\"QUnit\"]}}","'use strict'\n/**\n * Provides a Solid client helper object (which exposes various static modules).\n * @module solid.js\n * @main solid.js\n */\n\n/**\n * @class Solid\n * @static\n */\nvar Solid = {\n  auth: require('./lib/auth'),\n  identity: require('./lib/identity'),\n  meta: require('./lib/meta'),\n  status: require('./lib/status'),\n  web: require('./lib/web')\n}\n\nif (typeof tabulator !== 'undefined') {\n  tabulator.solid = Solid\n}\n\nmodule.exports = Solid\n","'use strict'\n/**\n * Provides miscelaneous meta functions (such as library version)\n * @module meta\n */\n\nvar lib = require('../package')\n\n/**\n * Returns Solid.js library version (read from `package.json`)\n * @return {String} Lib version\n */\nmodule.exports.version = function version () {\n  return lib.version\n}\n","/*\nThe MIT License (MIT)\n\nCopyright (c) 2015 Solid\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nSolid.js is a Javascript library for Solid applications. This library currently\ndepends on rdflib.js. Please make sure to load the rdflib.js script before\nloading solid.js.\n\nIf you would like to know more about the solid Solid project, please see\nhttps://github.com/solid/\n*/\n\n/**\n * Provides Solid methods for WebID authentication and signup\n * @module auth\n */\n'use strict'\nvar XMLHttpRequest = require('xhr2')\n\n// default (preferred) authentication endpoint\nvar authEndpoint = 'https://databox.me/'\nvar signupEndpoint = 'https://solid.github.io/solid-idps/'\n\n/**\n * Sets up an event listener to monitor login messages from child window/iframe\n * @method listen\n * @static\n * @return {Promise<String>} Event listener promise, resolves to user's WebID\n */\nvar listen = function listen () {\n  var promise = new Promise(function (resolve, reject) {\n    var eventMethod = window.addEventListener\n      ? 'addEventListener'\n      : 'attachEvent'\n    var eventListener = window[eventMethod]\n    var messageEvent = eventMethod === 'attachEvent'\n      ? 'onmessage'\n      : 'message'\n    eventListener(messageEvent, function (e) {\n      var u = e.data\n      if (u.slice(0, 5) === 'User:') {\n        var user = u.slice(5, u.length)\n        if (user && user.length > 0 && user.slice(0, 4) === 'http') {\n          return resolve(user)\n        } else {\n          return reject(user)\n        }\n      }\n    }, true)\n  })\n\n  return promise\n}\n\n/**\n * Performs a Solid login() via an XHR HEAD operation.\n * (Attempts to find the current user's WebID from the User header, if\n *   already authenticated.)\n * @method login\n * @static\n * @param url {String} Location of a Solid server or container at which the\n *   user might be authenticated.\n * @return {Promise<String>} XHR HEAD op promise, resolves to user's WebID\n */\nvar login = function login (url) {\n  url = url || window.location.origin + window.location.pathname\n  var promise = new Promise(function (resolve, reject) {\n    var http = new XMLHttpRequest()\n    http.open('HEAD', url)\n    http.withCredentials = true\n    http.onreadystatechange = function () {\n      if (this.readyState === this.DONE) {\n        if (this.status === 200) {\n          var user = this.getResponseHeader('User')\n          if (user && user.length > 0 && user.slice(0, 4) === 'http') {\n            return resolve(user)\n          }\n        }\n        // authenticate to a known endpoint\n        var http = new XMLHttpRequest()\n        http.open('HEAD', authEndpoint)\n        http.withCredentials = true\n        http.onreadystatechange = function () {\n          if (this.readyState === this.DONE) {\n            if (this.status === 200) {\n              var user = this.getResponseHeader('User')\n              if (user && user.length > 0 && user.slice(0, 4) === 'http') {\n                return resolve(user)\n              }\n            }\n            return reject({status: this.status, xhr: this})\n          }\n        }\n        http.send()\n      }\n    }\n    http.send()\n  })\n\n  return promise\n}\n\n/**\n * Opens a signup popup window, sets up `listen()`.\n * @method signup\n * @static\n * @param url {String} Location of a Solid server for user signup.\n * @return {Promise<String>} Returns a listener promise, resolves with signed\n *   up user's WebID.\n */\nvar signup = function signup (url) {\n  url = url || signupEndpoint\n  var leftPosition, topPosition\n  var width = 1024\n  var height = 600\n  // set borders\n  leftPosition = (window.screen.width / 2) - ((width / 2) + 10)\n  // set title and status bars\n  topPosition = (window.screen.height / 2) - ((height / 2) + 50)\n  window.open(url + '?origin=' + encodeURIComponent(window.location.origin),\n   'Solid signup', 'resizable,scrollbars,status,width=' + width + ',height=' +\n   height + ',left=' + leftPosition + ',top=' + topPosition)\n\n  var promise = new Promise(function (resolve, reject) {\n    listen().then(function (webid) {\n      return resolve(webid)\n    }).catch(function (err) {\n      return reject(err)\n    })\n  })\n\n  return promise\n}\n\nmodule.exports.listen = listen\nmodule.exports.login = login\nmodule.exports.signup = signup\n","'use strict'\n/**\n * Provides Web API helpers dealing with a user's online / offline status.\n * @module status\n */\n\n/**\n * Returns a user's online status (true if user is on line)\n * @method isOnline\n * @static\n * @return {Boolean}\n */\nvar isOnline = function isOnline () {\n  return window.navigator.onLine\n}\n\n/**\n * Adds an even listener to trigger when the user goes offline.\n * @method onOffline\n * @static\n * @param callback {Function} Callback to invoke when user goes offline.\n */\nvar onOffline = function onOffline (callback) {\n  window.addEventListener('offline', callback, false)\n}\n\n/**\n * Adds an even listener to trigger when the user comes online.\n * @method onOnline\n * @static\n * @param callback {Function} Callback to invoke when user comes online\n */\nvar onOnline = function onOnline (callback) {\n  window.addEventListener('online', callback, false)\n}\n\nmodule.exports.isOnline = isOnline\nmodule.exports.onOffline = onOffline\nmodule.exports.onOnline = onOnline\n","'use strict'\n/**\n * Provides a Solid web client class for performing LDP CRUD operations.\n * @module web\n */\n\nvar XMLHttpRequest = require('xhr2')\n// Init some defaults\nvar PROXY = 'https://databox.me/,proxy?uri={uri}'\nvar TIMEOUT = 5000\n\n$rdf.Fetcher.crossSiteProxyTemplate = PROXY\n// common vocabs\nvar LDP = $rdf.Namespace('http://www.w3.org/ns/ldp#')\n\n/**\n * Parses a Link header from an XHR HTTP Request.\n * @method parseLinkHeader\n * @param link {String} Contents of the Link response header\n * @return {Object}\n */\nvar parseLinkHeader = function parseLinkHeader (link) {\n  var linkexp = /<[^>]*>\\s*(\\s*;\\s*[^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+=(([^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+)|(\"[^\"]*\")))*(,|$)/g\n  var paramexp = /[^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+=(([^\\(\\)<>@,;:\"\\/\\[\\]\\?={} \\t]+)|(\"[^\"]*\"))/g\n\n  var matches = link.match(linkexp)\n  var rels = {}\n  for (var i = 0; i < matches.length; i++) {\n    var split = matches[i].split('>')\n    var href = split[0].substring(1)\n    var ps = split[1]\n    var s = ps.match(paramexp)\n    for (var j = 0; j < s.length; j++) {\n      var p = s[j]\n      var paramsplit = p.split('=')\n      // var name = paramsplit[0]\n      var rel = paramsplit[1].replace(/[\"']/g, '')\n      rels[rel] = href\n    }\n  }\n  return rels\n}\n\n/**\n * Parses an XHR response and composes a meta object\n * @method parseResponseMeta\n * @param resp {XMLHttpRequest} Result of an XHR\n * @return {Object} Parsed response object\n */\nfunction parseResponseMeta (resp) {\n  var h = parseLinkHeader(resp.getResponseHeader('Link'))\n  var meta = {}\n  meta.url = (resp.getResponseHeader('Location'))\n    ? resp.getResponseHeader('Location')\n    : resp.responseURL\n  meta.acl = h['acl']\n  meta.meta = (h['meta']) ? h['meta'] : h['describedBy']\n  meta.user = (resp.getResponseHeader('User'))\n    ? resp.getResponseHeader('User')\n    : ''\n  meta.websocket = (resp.getResponseHeader('Updates-Via'))\n    ? resp.getResponseHeader('Updates-Via')\n    : ''\n  // writable/editable resource\n  meta.editable = []\n  var patch = resp.getResponseHeader('Accept-Patch')\n  if (patch && patch.indexOf('application/sparql-update') >= 0) {\n    meta.editable.push('patch')\n  }\n  var allow = resp.getResponseHeader('Allow')\n  if (allow) {\n    if (allow.indexOf('PUT') >= 0) {\n      meta.editable.push('put')\n    }\n    if (allow.indexOf('POST') >= 0) {\n      meta.editable.push('post')\n    }\n    if (allow.indexOf('DELETE') >= 0) {\n      meta.editable.push('delete')\n    }\n  }\n\n  meta.exists = (resp.status === 200)\n  meta.xhr = resp\n  return meta\n}\n\n/**\n * Providers a collection of Solid/LDP web operations (CRUD)\n * @class SolidWebClient\n * @static\n */\nvar SolidWebClient = {\n  /**\n   * Checks to see if a Solid resource exists, and returns useful resource\n   *   metadata info.\n   * @method head\n   * @param url {String} URL of a resource or container\n   * @return {Promise} Result of an HTTP HEAD operation (returns a meta object)\n   */\n  head: function head (url) {\n    var promise = new Promise(function (resolve) {\n      var http = new XMLHttpRequest()\n      http.open('HEAD', url)\n      http.withCredentials = true\n      http.onreadystatechange = function () {\n        if (this.readyState === this.DONE) {\n          resolve(parseResponseMeta(this))\n        }\n      }\n      http.send()\n    })\n\n    return promise\n  },\n\n  /**\n   * Retrieves a resource or container by making an HTTP GET call.\n   * @method get\n   * @param url {String} URL of the resource or container to fetch\n   * @return {Promise|Object} Result of the HTTP GET operation\n   */\n  get: function get (url) {\n    var promise = new Promise(function (resolve, reject) {\n      var g = $rdf.graph()\n      var f = new $rdf.Fetcher(g, TIMEOUT)\n\n      var docURI = (url.indexOf('#') >= 0)\n        ? url.slice(0, url.indexOf('#'))\n        : url\n      f.nowOrWhenFetched(docURI, undefined, function (ok, body, xhr) {\n        if (!ok) {\n          reject({status: xhr.status, xhr: xhr})\n        } else {\n          resolve(g)\n        }\n      })\n    })\n\n    return promise\n  },\n\n  /**\n   * Creates a new resource by performing\n   *   a Solid/LDP POST operation to a specified container.\n   * @param url {String} URL of the container to post to\n   * @param data {Object} Data/payload of the resource to be created\n   * @param slug {String} Suggested URL fragment for the new resource\n   * @param isContainer {Boolean} Is the object being created a Container\n   *            or Resource?\n   * @param mime {String} MIME Type\n   * @method post\n   * @return {Promise|Object} Result of XHR POST (returns parsed\n   *     response meta object) or an anonymous error object with status code\n   */\n  post: function post (url, data, slug, isContainer, mime) {\n    var resType = LDP('Resource').uri\n    if (isContainer) {\n      resType = LDP('BasicContainer').uri\n      mime = 'text/turtle' // force right mime for containers only\n    }\n    mime = mime || 'text/turtle'\n    var promise = new Promise(function (resolve, reject) {\n      var http = new XMLHttpRequest()\n      http.open('POST', url)\n      http.setRequestHeader('Content-Type', mime)\n      http.setRequestHeader('Link', '<' + resType + '>; rel=\"type\"')\n      if (slug && slug.length > 0) {\n        http.setRequestHeader('Slug', slug)\n      }\n      http.withCredentials = true\n      http.onreadystatechange = function () {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200 || this.status === 201) {\n            return resolve(parseResponseMeta(this))\n          } else {\n            reject({status: this.status, xhr: this})\n          }\n        }\n      }\n      if (data && data.length > 0) {\n        http.send(data)\n      } else {\n        http.send()\n      }\n    })\n\n    return promise\n  },\n\n  /**\n   * Updates an existing resource or creates a new resource by performing\n   *   a Solid/LDP PUT operation to a specified container\n   * @method put\n   * @param url {String} URL of the resource to be updated/created\n   * @param data {Object} Data/payload of the resource to be created or updated\n   * @param mime {String} MIME Type of the resource to be created\n   * @return {Promise|Object} Result of PUT operation (returns parsed response\n   *     meta object if successful, rejects with an anonymous error status\n   *     object if not successful)\n   */\n  put: function put (url, data, mime) {\n    var promise = new Promise(function (resolve, reject) {\n      mime = mime || 'text/turtle'\n      var http = new XMLHttpRequest()\n      http.open('PUT', url)\n      http.setRequestHeader('Content-Type', mime)\n      http.withCredentials = true\n      http.onreadystatechange = function () {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200 || this.status === 201) {\n            return resolve(parseResponseMeta(this))\n          } else {\n            reject({status: this.status, xhr: this})\n          }\n        }\n      }\n      // Handle network errors\n      http.onerror = function () {\n        reject(Error('Network Error'))\n      }\n      if (data) {\n        http.send(data)\n      } else {\n        http.send()\n      }\n    })\n\n    return promise\n  },\n\n  /**\n   * Partially edits an RDF-type resource by performing a PATCH operation.\n   *   Accepts arrays of individual statements (in Turtle format) as params.\n   *   For example:\n   *   [ '<a> <b> <c> .', '<d> <e> <f> .']\n   * @method patch\n   * @param url {String} URL of the resource to be edited\n   * @param toDel {Array<String>} Triples to remove from the resource\n   * @param toIns {Array<String>} Triples to insert into the resource\n   * @return {Promise|Object} Result of PATCH operation (returns parsed response\n   *     meta object if successful, rejects with an anonymous error status\n   *     object if not successful)\n   */\n  patch: function patch (url, toDel, toIns) {\n    var promise = new Promise(function (resolve, reject) {\n      var data = ''\n      var i\n\n      if (toDel && toDel.length > 0) {\n        for (i = 0; i < toDel.length; i++) {\n          if (i > 0) {\n            data += ' ;\\n'\n          }\n          data += 'DELETE DATA { ' + toDel[i] + ' }'\n        }\n      }\n      if (toIns && toIns.length > 0) {\n        for (i = 0; i < toIns.length; i++) {\n          if (i > 0 || (toDel && toDel.length > 0)) {\n            data += ' ;\\n'\n          }\n          data += 'INSERT DATA { ' + toIns[i] + ' }'\n        }\n      }\n\n      var http = new XMLHttpRequest()\n      http.open('PATCH', url)\n      http.setRequestHeader('Content-Type', 'application/sparql-update')\n      http.withCredentials = true\n      http.onreadystatechange = function () {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200 || this.status === 201) {\n            return resolve(parseResponseMeta(this))\n          } else {\n            reject({status: this.status, xhr: this})\n          }\n        }\n      }\n      if (data && data.length > 0) {\n        http.send(data)\n      } else {\n        http.send()\n      }\n    })\n\n    return promise\n  },\n\n  /**\n   * Deletes an existing resource or container.\n   * @method del\n   * @param url {String} URL of the resource or container to be deleted\n   * @return {Promise|Object} Result of the HTTP Delete operation (returns true\n   *   on success, or an anonymous error object on failure)\n   */\n  del: function del (url) {\n    var promise = new Promise(function (resolve, reject) {\n      var http = new XMLHttpRequest()\n      http.open('DELETE', url)\n      http.withCredentials = true\n      http.onreadystatechange = function () {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200 || this.status === 201) {\n            return resolve(true)\n          } else {\n            reject({status: this.status, xhr: this})\n          }\n        }\n      }\n      http.send()\n    })\n\n    return promise\n  }\n}\n\n// Alias some extra Solid web client methods\nSolidWebClient.create = SolidWebClient.post\nSolidWebClient.replace = SolidWebClient.put\nSolidWebClient.update = SolidWebClient.patch\nSolidWebClient.parseLinkHeader = parseLinkHeader\n\nmodule.exports = SolidWebClient\n","'use strict'\n/**\n * Provides Solid helper functions involved with parsing a user's WebId profile.\n * @module identity\n */\n\nvar solidClient = require('./web')\n\n// common vocabs\n// var RDF = $rdf.Namespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#')\nvar RDFS = $rdf.Namespace(\"http://www.w3.org/2000/01/rdf-schema#\")\nvar OWL = $rdf.Namespace('http://www.w3.org/2002/07/owl#')\nvar PIM = $rdf.Namespace('http://www.w3.org/ns/pim/space#')\nvar FOAF = $rdf.Namespace('http://xmlns.com/foaf/0.1/')\nvar DCT = $rdf.Namespace('http://purl.org/dc/terms/')\n\n/**\n * Appends RDF statements from one graph object to another\n * @method appendGraph\n * @param toGraph {Graph} $rdf.Graph object to append to\n * @param fromGraph {Graph} $rdf.Graph object to append from\n * @param docURI {String} Document URI to use as source\n */\nvar appendGraph = function appendGraph (toGraph, fromGraph, docURI) {\n  var source = (docURI) ? $rdf.sym(docURI) : undefined\n  fromGraph.statementsMatching(undefined, undefined, undefined, source)\n    .forEach(function (st) {\n      toGraph.add(st.subject, st.predicate, st.object, st.why)\n    })\n}\n\n/**\n * Fetches a user's WebId profile, follows `sameAs` links,\n *   and return a promise with a parsed RDF graph of the results.\n * @method getProfile\n * @static\n * @param url {String} WebId or Location of a user's profile.\n * @return {Promise<Graph>}\n */\nvar getProfile = function getProfile (url) {\n  var promise = new Promise(function (resolve, reject) {\n    // Load main profile\n    solidClient.get(url).then(\n      function (graph) {\n        // set WebID\n        url = (url.indexOf('#') >= 0) ? url.slice(0, url.indexOf('#')) : url\n        var webid = graph.any($rdf.sym(url), FOAF('primaryTopic'))\n        // find additional resources to load\n        var toLoad = []\n        toLoad = toLoad.concat(graph.statementsMatching(webid,\n          OWL('sameAs'), undefined, $rdf.sym(url)))\n        toLoad = toLoad.concat(graph.statementsMatching(webid,\n          RDFS('seeAlso'), undefined, $rdf.sym(url)))\n        toLoad = toLoad.concat(graph.statementsMatching(webid,\n          PIM('preferencesFile'), undefined, $rdf.sym(url)))\n        var total = toLoad.length\n        // sync promises externally instead of using Promise.all()\n        // which fails if one GET fails\n        var syncAll = function () {\n          if (total === 0) {\n            return resolve(graph)\n          }\n        }\n        if (total === 0) {\n          return resolve(graph)\n        }\n        // Load other files\n        toLoad.forEach(function (prof) {\n          solidClient.get(prof.object.uri).then(\n            function (g) {\n              appendGraph(graph, g, prof.object.uri)\n              total--\n              syncAll()\n            }\n          ).catch(\n            function (err) {\n              if (err) throw err\n              total--\n              syncAll()\n            })\n        })\n      }\n    )\n    .catch(\n      function (err) {\n        reject(err)\n      }\n    )\n  })\n\n  return promise\n}\n\n/**\n * Finds the Workspaces linked from the user's WebId Profile.\n * (Optionally fetches the profile, if it hasn't already been loaded.)\n * @method getWorkspaces\n * @static\n * @param webid {String} WebId or Location of a user's profile.\n * @param graph {Graph} Parsed graph of the user's profile.\n * @return {Array<Object>} List of parsed Workspace triples.\n */\nvar getWorkspaces = function getWorkspaces (webid, graph) {\n  var promise = new Promise(function (resolve, reject) {\n    if (!graph) {\n      // fetch profile and call function again\n      getProfile(webid).then(function (g) {\n        getWorkspaces(webid, g).then(function (ws) {\n          return resolve(ws)\n        }).catch(function (err) {\n          return reject(err)\n        })\n      }).catch(function (err) {\n        return reject(err)\n      })\n    } else {\n      // find workspaces\n      var workspaces = []\n      var ws = graph.statementsMatching($rdf.sym(webid), PIM('workspace'),\n        undefined)\n      if (ws.length === 0) {\n        return resolve(workspaces)\n      }\n      ws.forEach(function (w) {\n        // try to get some additional info - i.e. desc/title\n        var workspace = {}\n        var title = graph.any(w.object, DCT('title'))\n        if (title && title.value) {\n          workspace.title = title.value\n        }\n        workspace.url = w.object.uri\n        workspace.statements = graph.statementsMatching(w.object, undefined,\n          undefined)\n        workspaces.push(workspace)\n      })\n      return resolve(workspaces)\n    }\n  })\n\n  return promise\n}\n\n/**\n * Finds writeable profiles linked from the user's WebId Profile.\n * @method getWritableProfiles\n * @static\n * @param webid {String} WebId or Location of a user's profile.\n * @param graph {Graph} Parsed graph of the user's profile.\n * @return {Array<Object>} List of writeable profile triples\n */\nvar getWritableProfiles = function getWritableProfiles (webid, graph) {\n  var promise = new Promise(function (resolve, reject) {\n    if (!graph) {\n      // fetch profile and call function again\n      getProfile(webid).then(function (g) {\n        getWritableProfiles(webid, g).then(function (list) {\n          return resolve(list)\n        }).catch(function (err) {\n          return reject(err)\n        })\n      }).catch(function (err) {\n        return reject(err)\n      })\n    } else {\n      // find profiles\n      var profiles = []\n\n      webid = (webid.indexOf('#') >= 0)\n        ? webid.slice(0, webid.indexOf('#'))\n        : webid\n      var user = graph.any($rdf.sym(webid), FOAF('primaryTopic'))\n      // find additional resources to load\n      var toLoad = []\n      toLoad = toLoad.concat(graph.statementsMatching(user,\n        OWL('sameAs'), undefined, $rdf.sym(webid)))\n      toLoad = toLoad.concat(graph.statementsMatching(user,\n        RDFS('seeAlso'), undefined, $rdf.sym(webid)))\n      toLoad = toLoad.concat(graph.statementsMatching(user,\n        PIM('preferencesFile'), undefined, $rdf.sym(webid)))\n      // also check this (main) profile doc\n      toLoad = toLoad.concat({object: {uri: webid}})\n      var total = toLoad.length\n      // sync promises externally instead of using Promise.all()\n      // which fails if one GET fails\n      var syncAll = function () {\n        if (total === 0) {\n          return resolve(profiles)\n        }\n      }\n      if (total === 0) {\n        return resolve(profiles)\n      }\n\n      // Load sameAs files\n      toLoad.forEach(function (prof) {\n        var url = prof.object.uri\n        solidClient.head(url).then(\n          function (meta) {\n            if (meta.editable.length > 0 && profiles.indexOf(url) < 0) {\n              profiles.push({url: url, editable: meta.editable})\n            }\n            total--\n            syncAll()\n          }\n        ).catch(\n          function (err) {\n            if (err) throw err\n            total--\n            syncAll()\n          })\n      })\n    }\n  })\n\n  return promise\n}\n\nmodule.exports.getProfile = getProfile\nmodule.exports.getWorkspaces = getWorkspaces\nmodule.exports.getWritableProfiles = getWritableProfiles\n","module.exports = XMLHttpRequest;\n"]}